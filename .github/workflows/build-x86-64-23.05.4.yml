name: build-x86-64-immortalwrt-23.05.4

on:
  workflow_dispatch:
    inputs:
      profile:
        description: '请输入要编译固件大小 单位(MB)'
        required: true
        default: '1024'
        type: choice
        options:
          - '1024'
          - '5120'
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/x86-64/build.sh

      - name: Build ImmortalWrt-x86-64-eif
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
              -v "${{ github.workspace }}/x86-64/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/x86-64/build.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              immortalwrt/imagebuilder:x86-64-openwrt-23.05.4 /bin/bash /home/build/immortalwrt/build.sh
          done
      
      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/x86/64/immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz ${{ github.workspace }}
          sha256sum immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz > immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz.sha256
          sha256sum -c immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz.sha256

      - name: Create info
        run: |
        # 获取用户输入的固件大小和是否包含 Docker 插件
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          
        # 根据固件大小判断单位是 MB 还是 GB
          if [ "$profiles" -gt 1024 ]; then
          size_in_gb=$(echo "scale=2; $profiles/1024" | bc)
          size="软件包大小 ${size_in_gb} GB"
          else
          size="软件包大小 ${profiles} MB"
          fi

        # 判断是否包含 Docker 插件
          if [ "$include_docker" == "yes" ]; then
          docker_status="带"
          else
          docker_status="不带"
          fi
          
        # 使用 sed 替换模板文件中的占位符并生成 info.md
          sed -e "s/{{size}}/$size/" -e "s/{{info}}/$docker_status/" ${{ github.workspace }}/info_template.md > ${{ github.workspace }}/x86-64/info.md

      - name: Get current date and time
        id: date
        run: echo "current_date=$(date '+%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: Create GitHub Release Info for 23.05.4
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: Autobuild-ImmortWrt-23.05.4-x86-64
          name: "ImmortWrt-23.05.4-x86-64-efi ${{ env.current_date }}"
          body_path: ${{ github.workspace }}/x86-64/info.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ImmortWrt 23.05.4 as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: Autobuild-ImmortWrt-23.05.4-x86-64
          files: |
            ${{ github.workspace }}/immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz
            ${{ github.workspace }}/immortalwrt-23.05.4-x86-64-generic-squashfs-combined-efi.img.gz.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

